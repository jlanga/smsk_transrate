rule raw_make_links_pe_sample:
    """
    Make a link next to the original file, with a prettier name than default.
    """
    input:
        forward= lambda wildcards: config["samples_pe"][wildcards.sample]["forward"],
        reverse= lambda wildcards: config["samples_pe"][wildcards.sample]["reverse"]
    output:
        forward= protected(RAW_DIR + "{sample}_1.fq.gz"),
        reverse= protected(RAW_DIR + "{sample}_2.fq.gz")
    log:
        RAW_DIR + "make_links_pe_{sample}.log"
    benchmark:
        RAW_DIR + "make_links_pe_{sample}.json"
    shell:
        "ln -s $(readlink -f {input.forward}) {output.forward} 2> {log}; "
        "ln -s $(readlink -f {input.reverse}) {output.reverse} 2>> {log}"



rule raw_fastqc_pe_sample:
    """FASTQC over PE files"""
    input:
        forward = RAW_DIR + "{sample}_1.fq.gz",
        reverse = RAW_DIR + "{sample}_2.fq.gz"
    output:
        html1= protected(RAW_DIR + "{sample}_1_fastqc.html"),
        html2= protected(RAW_DIR + "{sample}_2_fastqc.html"),
        zip1=  protected(RAW_DIR + "{sample}_1_fastqc.zip"),
        zip2=  protected(RAW_DIR + "{sample}_2_fastqc.zip")
    threads:
        2
    params:
        outdir = RAW_DIR
    log:
        RAW_DIR + "fastqc_pe_{sample}.log"
    benchmark:
        RAW_DIR + "fastqc_pe_{sample}.json"
    shell:
        "fastqc "
            "--nogroup "
            "--outdir {params.outdir} "
            "{input.forward} {input.reverse} "
        "2> {log} 1>&2"



rule raw_multiqc:
    '''MultiQC report over the FASTQC ones'''
    input:
        pe_files = expand(
            RAW_DIR + "{sample}_{pair}_fastqc.{extension}",
            sample = SAMPLES_PE,
            pair = "1 2".split(),
            extension = "html zip".split()
        )
    output:
        html = protected(RAW_DIR + "multiqc_report.html")
    params:
        folder = RAW_DIR
    log:
        RAW_DIR + "multiqc.log"
    benchmark:
        RAW_DIR + "multiqc.json"
    shell:
        "multiqc "
            "--title Raw "
            "--filename {output.html} "
            "{params.folder} "
        "2> {log}"



rule raw_results:
    """Checkpoint to generate all the links for raw data"""
    input:
        expand(
            RAW_DIR + "{sample}_{end}.fq.gz",
            sample = SAMPLES_PE,
            end = "1 2".split()
        )



rule raw_doc:
    """Checkpoint to generate all reports for raw data"""
    input:
        html = RAW_DIR + "multiqc_report.html"



rule raw:
    """Make both results + reports for raw (raw = RAW_DIR)"""
    input:
        pe_files = expand(
            RAW_DIR + "{sample}_{end}.fq.gz",
            sample = SAMPLES_PE,
            end = "1 2".split()
        ),
        html = RAW_DIR + "multiqc_report.html"
